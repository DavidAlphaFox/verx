#!/usr/bin/awk -f

# Usage: bin/mk_libvirt_constants /path/to/libvirt/include/libvirt/*.h | \
#        sort | uniq > include/libvirt_constants.hrl

BEGIN { inenum = 0 }

function err(msg) {
    print msg > "/dev/stderr"
    exit 1
}

function ensure_comma(str) {
    if (str !~ /,/ && str ~ /\/\*/) {
        sub("\\/\\*", ", \\/\\*", str)
    }
    else if (str !~ /,/) {
        sub("$", ",", str)
    }

    return str
}

function strip(str) {
    sub("^\\s*", "", str)
    sub("\\s*$", "", str)
    return str
}

function term(str) {
    if (str ~ /^[0-9\-]+$/) {
        return str
    }
    else if (str ~ /^[A-Z0-9_]+$/) {
        return "?" str
    }
    else if (str ~ /<</) {
        sub("<<", "bsl", str)
        return str
    }

    err("UNMATCHED TERM:|" str "|")
}

function define(name, val, comment) {
    return "-define(" strip(name) "," term(strip(val)) ")."
}

{
    if (/^typedef enum/) inenum = 1
    if (/^}/) inenum = 0

    if (inenum && $1 ~ /^VIR_/) {
        split(ensure_comma($0), a, "=")
        split(a[2], b, ",")
        if (!length(b[1])) next
        print define(a[1], b[1], b[2])
    }
}
